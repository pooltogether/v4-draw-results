name: CronJob
on:
  schedule:
    - cron: "0 23 * * *" # everyday at 11pm UTC
  push:
env:
  ETHEREUM_MAINNET_RPC_URL: ${{secrets.ETHEREUM_MAINNET_RPC_URL}}
  POLYGON_MAINNET_RPC_URL: ${{secrets.POLYGON_MAINNET_RPC_URL}}
  AVALANCHE_MAINNET_RPC_URL: ${{secrets.AVALANCHE_MAINNET_RPC_URL}}
  ALCHEMY_MAINNET_URL: ${{secrets.ALCHEMY_MAINNET_URL}}
  ALCHEMY_RINKEBY_URL: ${{secrets.ALCHEMY_RINKEBY_URL}}
  MATICVIGIL_URL: ${{secrets.MATICVIGIL_URL}}
  AVALANCHE_URL: ${{secrets.AVALANCHE_URL}}
  MUMBAI_URL: ${{secrets.MUMBAI_URL}}
  DEBUG: ${{secrets.DEBUG}}
jobs:
  runCLI:
    name: DrawCalculator CLI
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        node: ["16.9.0"]
        os: [ubuntu-latest]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Install Dependencies (with cache)
        id: installDependencies
        uses: bahmutov/npm-install@v1
      - name: Install PoolTogether V4 CLI
        run: |
          yarn global add @pooltogether/v4-cli@0.1.0-beta.12
          echo "$(yarn global bin)" >> $GITHUB_PATH
      # Draw Calculator 1st Attempt
      # When the CLI completes with exit Code 2 or 3 a new issue is created to log the unrecoverable error state.
      - name: Test PTV4 drawPrizes
        id: computeDrawPrizes
        run: |
          ptv4 compute drawPrizes --c 1 -d 65 -0 ./temp -t 0xdd4d117723C257CEe402285D3aCF218E9A8236E1
        continue-on-error: true
      - name: Test PTV4 
        id: computePoolPrizes
        run: |
          ptv4 compute poolPrizes --chainId 1  --outDir ./temp --ticket 0xdd4d117723C257CEe402285D3aCF218E9A8236E1
          ptv4 compute poolPrizes --chainId 137  --outDir ./temp --ticket 0x6a304dFdb9f808741244b6bfEe65ca7B3b3A6076
          ptv4 compute poolPrizes --chainId 43114  --outDir ./temp --ticket 0xb27f379c050f6ed0973a01667458af6ecebc1d90
        continue-on-error: true
      - name: Run Draw Calculator CLI
        id: runDrawCalculatorCLI
        run: ptv4 compute networkPrizes -o ./api/prizes
        continue-on-error: true
      # Git Commit
      # TODO: Use actions/github-script@v5 to complete commits
      - name: Commit files for polygon (if required)
        if: steps.runDrawCalculatorCLI.outputs.polygonCliToolRan == 'true'
        continue-on-error: true
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull
          git add ./api/prizes/137/
          git commit -m "Add draw for polygon draw ${{steps.runDrawCalculatorCLI.outputs.polygonDrawId}}"
      - name: Commit files for mainnet (if required) # this is done seperately to polygon for a different commit message
        if: steps.runDrawCalculatorCLI.outputs.mainnetCliToolRan == 'true'
        continue-on-error: true
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull
          git add ./api/prizes/1/
          git commit -m "Add draw for mainnet draw ${{steps.runDrawCalculatorCLI.outputs.mainnetDrawId}}"
      - name: Commit files for avalanche (if required) # this is done seperately to polygon for a different commit message
        if: steps.runDrawCalculatorCLI.outputs.avalancheCliToolRan == 'true'
        continue-on-error: true
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull
          git add ./api/prizes/43114/
          git commit -m "Add draw for avalanche draw ${{steps.runDrawCalculatorCLI.outputs.avalancheDrawId}}"
      - name: Push changes (if required)
        uses: ad-m/github-push-action@master
        if: steps.runDrawCalculatorCLI.outputs.polygonCliToolRan == 'true' || steps.runDrawCalculatorCLI.outputs.mainnetCliToolRan == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}